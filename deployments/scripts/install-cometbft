#!/bin/bash
# Utility script to download a specific version of CometBFT for use with Penumbra.
# Designed to be used in CI contexts, to bootstrap a testing setup quickly.
set -euo pipefail


# Sane defaults
COMETBFT_VERSION="${COMETBFT_VERSION:-0.37.5}"

# Determine platform, so we can support both macOS and Linux.
uname_kernel="$(uname -s)"
uname_machine="$(uname -m)"
if [[ "$uname_kernel" = "Linux" && "$uname_machine" = "x86_64" ]] ; then
    platform_string="linux_amd64"
elif [[ "$uname_kernel" = "Darwin" && "$uname_machine" = "x86_64" ]] ; then
    platform_string="darwin_amd64"
elif [[ "$uname_kernel" = "Darwin" && "$uname_machine" = "arm64" ]] ; then
    platform_string="darwin_arm64"
else
    >&2 echo "ERROR: platform '$uname_kernel' with architecture '$uname_machine' not supported."
    exit 1
fi

# Download and extract
cometbft_download_url="https://github.com/cometbft/cometbft/releases/download/v${COMETBFT_VERSION}/cometbft_${COMETBFT_VERSION}_${platform_string}.tar.gz"
cometbft_temp_dir="$(mktemp -d)"
pushd "$cometbft_temp_dir" > /dev/null
curl -sSfL -O "$cometbft_download_url"
tar -xzf "cometbft_${COMETBFT_VERSION}_${platform_string}.tar.gz" cometbft
trap 'rm -r "$cometbft_temp_dir"' EXIT

# Try to write to system-wide location.
cometbft_install_dir="/usr/local/bin"
if [[ -w "$cometbft_install_dir" ]] ; then
    mv -v cometbft "${cometbft_install_dir}/"
else
    >&2 echo "WARNING: $cometbft_install_dir not writable, will prompt for privileges"
    sudo mv -v cometbft "${cometbft_install_dir}/"
fi

# Sanity checks
>&2 echo "Checking that cometbft is installed:"
which cometbft
cometbft version
